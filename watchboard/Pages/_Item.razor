@using System.Web
@using WatchBoard.Services
@using WatchBoard.Services.Database.Entities
<div hx-indicator="#indicator-@(ItemModel.Id)" class="card text-bg-dark mx-auto" id="card-@(ItemModel.Id)" style="max-width: 310px;">
    <img src="@(ItemModel.BackdropBase64)" width="300" height="169" class="card-img" alt="@ItemModel.Name">
    <div class="card-img-overlay p-0">

        <div class="position-relative w-100 h-100">

            <div class="htmx-indicator position-absolute top-50 start-0" id="indicator-@(ItemModel.Id)">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>

            <div class="position-absolute top-0 start-0 ps-2 pt-2 w-100">

                <div class="float-start @(ToolbarClasses) align-items-center" id="toolbar@(ItemModel.Id)">
                    <div class="btn-group shadow-lg bg-secondary bg-opacity-75" role="group" aria-label="Basic example">
                        <div class="dropdown">
                            <button class="btn py-0 ms-1 me-1 px-0 ps-1" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-info-circle"></i>
                            </button>
                            <div class="dropdown-menu p-4 text-body-secondary" style="width: 300px;">
                                <p>
                                    <i class="bi @(ItemModel.Type == ItemType.Movie ? "bi-camera-reels" : "bi-view-list")"></i> @ItemModel.ReleaseDates()
                                    <br/>
                                    <svg class="bi" width="16" height="19" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="@(ProviderSvg(ItemModel.SelectedProviderName ?? ""))"></path>
                                    </svg>
                                    @(ItemModel.SelectedProviderName ?? ItemModel.ProviderOptions.Count + " watch options")
                                </p>
                                <p>
                                    <i class="bi bi-info-circle"></i> @ItemModel.TagLine
                                </p>
                                <p class="mb-0">
                                    <i class="bi bi-box-arrow-up-right"></i>
                                    <a href="@ItemModel.ImdbUrl" target="_blank">IMDB</a>
                                </p>
                            </div>
                        </div>
                        <div class="dropdown">
                            <button class="btn py-0 me-1 px-0 ps-1" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-gear"></i>
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    <button class="dropdown-item" hx-put="/app/items/@(ItemModel.Id)" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-swap="outerHTML">
                                        <i class="bi bi-arrow-clockwise"></i> Refresh Data
                                    </button>
                                </li>
                                <li>
                                    <button class="dropdown-item" hx-swap="delete swap:1s" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-delete="/app/items/@(ItemModel.Id)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </li>
                                <li><h6 class="dropdown-header">Move to...</h6></li>
                                @foreach (var otherBoard in OtherBoards)
                                {
                                    <li>
                                        <button class="dropdown-item" hx-swap="delete swap:1s" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-put="/app/items/@(ItemModel.Id)/move/@(otherBoard.Id)">
                                            <i class="bi bi-arrow-right"></i> @otherBoard.Name
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                        <button class="btn py-0 me-1 px-0 ps-1" type="button" hx-swap="delete swap:1s" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-delete="/app/items/@(ItemModel.Id)" hx-confirm="Are you sure you wish to remove this?">
                            <i class="bi bi-trash"></i>
                        </button>
                        <div class="dropdown">
                            <button class="btn py-0 me-1 px-0 ps-1" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-images"></i>
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var img in Images)
                                {
                                    <li>
                                        <button class="dropdown-item @(ItemModel.BackdropUrl == img.UrlPath ? "fw-bold" : "")" hx-put="/app/items/@(ItemModel.Id)/backdrops/@(img.Id)" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-swap="outerHTML">
                                            <i class="bi bi-image"></i> @(img.VoteAverage.ToString("0.0")) (@(img.VoteCount) votes)
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>
                        <div class="dropdown">
                            <button class="btn py-0 me-1 px-0 ps-1" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-eye"></i>
                            </button>
                            <ul class="dropdown-menu">
                                @foreach (var p in ItemModel.ProviderOptions)
                                {
                                    <li>
                                        <button class="dropdown-item @(ItemModel.SelectedProviderName == p ? "fw-bold" : "")" hx-put="/app/items/@(ItemModel.Id)/providers/@(HttpUtility.UrlEncode(p))" hx-target="#card-@(ItemModel.Id)" hx-params="none" hx-swap="outerHTML">
                                            <i class="bi bi-eye"></i> @p
                                        </button>
                                    </li>
                                }
                            </ul>
                        </div>

                    </div>
                </div>

                <div class="float-end me-2">
                    <a href="#" class="ps-1 py-0 rounded bg-secondary link-light bg-opacity-50" data-bs-toggle="collapse" data-bs-target="#toolbar@(ItemModel.Id)" aria-expanded="false" aria-controls="toolbar@(ItemModel.Id)">
                        <i class="bi bi-three-dots"></i>
                    </a>
                </div>

            </div>

            <div class="position-absolute bottom-0 w-100 bg-body-secondary bg-opacity-50 p-2">
                @if (ItemModel.SeriesStatus == SeriesStatus.InProgress)
                {
                    @if (ItemModel.SeriesNextEpisodeNumber == 1)
                    {
                        <h6 class="card-subtitle mb-2 text-body-secondary shadow-lg">
                            Season @(ItemModel.SeriesNextEpisodeSeason) starts @ItemModel.SeriesNextEpisodeDate?.HumanizeDateString()
                        </h6>
                    }
                    else
                    {
                        <h6 class="card-subtitle mb-2 text-body-secondary shadow-lg">
                            S@(ItemModel.SeriesNextEpisodeSeason) E@(ItemModel.SeriesNextEpisodeNumber) premieres @ItemModel.SeriesNextEpisodeDate?.HumanizeDateString()
                        </h6>
                    }
                }
                <h5 class="card-title shadow-lg">
                    <div class="float-start">@ItemModel.Name</div>
                    <div class="float-end">
                        <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                            <path d="@(ProviderSvg(ItemModel.SelectedProviderName ?? ""))"></path>
                        </svg>
                    </div>
                </h5>
            </div>

        </div>
    </div>
</div>

@code
{

    [Parameter]
    public Item ItemModel { get; set; } = new();

    [Parameter]
    public List<Board> OtherBoards { get; set; } = [];

    private List<ItemImage> Images { get; set; } = [];

    private string ToolbarClasses => ItemModel.Expanded ? "collapse show" : "collapse";

    protected override void OnInitialized()
    {
        Images = ItemModel.GetImages()
            .Where(x => x.Type == ItemImageType.Backdrop)
            .Take(10)
            .ToList();
        base.OnInitialized();
    }

    private string TypeSvg(ItemType type)
    {
        return type == ItemType.Tv
            ? "M22 18V20H2V18H22ZM2 3.5L10 8.5L2 13.5V3.5ZM22 11V13H12V11H22ZM4 7.1085V9.8915L6.22641 8.5L4 7.1085ZM22 4V6H12V4H22Z"
            : "M12 20H20V22H12C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 14.2512 21.2561 16.3287 20.0007 18H17.2916C18.9525 16.5341 20 14.3894 20 12C20 7.58172 16.4183 4 12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20ZM12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8C14 9.10457 13.1046 10 12 10ZM8 14C6.89543 14 6 13.1046 6 12C6 10.8954 6.89543 10 8 10C9.10457 10 10 10.8954 10 12C10 13.1046 9.10457 14 8 14ZM16 14C14.8954 14 14 13.1046 14 12C14 10.8954 14.8954 10 16 10C17.1046 10 18 10.8954 18 12C18 13.1046 17.1046 14 16 14ZM12 18C10.8954 18 10 17.1046 10 16C10 14.8954 10.8954 14 12 14C13.1046 14 14 14.8954 14 16C14 17.1046 13.1046 18 12 18Z";
    }

    private string ProviderSvg(string providerName)
    {
        if (providerName.Contains("Amazon", StringComparison.OrdinalIgnoreCase))
        {
            return "M15.6262 14.6201C14.5191 16.2386 12.8976 17.0042 11.0007 17.0042C8.69659 17.0042 6.7243 15.2315 7.00788 12.8803C7.32248 10.272 9.34731 9.14962 12.716 8.73726C13.3171 8.66367 13.566 8.64299 14.8629 8.54691C14.9116 8.54331 14.9575 8.53988 15.001 8.5366C15.0008 8.46544 15.0007 8.39386 15.0007 8.32185C15.0007 6.52595 13.9328 5.30005 12.5007 5.30005C11.0638 5.30005 10.0603 6.0474 9.44592 7.82645L7.55546 7.17365C8.44288 4.60377 10.1935 3.30005 12.5007 3.30005C15.1034 3.30005 17.0007 5.47803 17.0007 8.32185C17.0007 10.9707 17.164 13.0776 17.484 13.8794C17.84 14.7715 17.9698 14.9959 18.3677 15.4921L16.8075 16.7434C16.2843 16.091 16.0549 15.6945 15.6264 14.6207L15.6262 14.6201ZM21.2572 20.5453C20.9864 20.7452 20.5157 20.6263 20.7288 20.1048C20.9934 19.4569 21.2755 18.6971 20.9911 18.3527C20.7807 18.098 20.5235 17.9711 19.9637 17.9711C19.5041 17.9711 19.2733 18.0305 18.9688 18.0508C18.7646 18.0645 18.6753 17.7537 18.8775 17.6109C19.1393 17.426 19.4216 17.2811 19.7483 17.1833C20.8979 16.8389 22.253 17.0276 22.4172 17.2658C22.7826 17.7959 22.2189 19.835 21.2572 20.5453ZM20.0754 19.4608C19.8136 19.7164 19.5299 19.9496 19.2462 20.156C17.1235 21.7716 14.3748 22.6169 11.9875 22.6169C8.14505 22.6169 4.70765 20.8226 2.10014 17.8212C1.87644 17.5906 2.06133 17.2555 2.32314 17.4369C5.13247 19.5136 8.6108 20.7699 12.2112 20.7699C14.4772 20.7699 16.9195 20.2329 19.2462 19.0775C19.4085 19.0007 19.5906 18.8961 19.7501 18.8228C20.117 18.6128 20.4395 19.1293 20.0754 19.4608ZM15.0107 10.5414C13.7522 10.6347 13.5147 10.6544 12.959 10.7224C10.4062 11.0349 9.16175 11.7247 8.99349 13.1198C8.86763 14.1633 9.80321 15.0042 11.0007 15.0042C13.0397 15.0042 14.5179 13.7764 15.0227 10.5406C15.0187 10.5409 15.0147 10.5411 15.0107 10.5414Z";
        }

        if (providerName.Contains("Netflix", StringComparison.OrdinalIgnoreCase))
        {
            return "M15.9853 17.2079L16.001 2H18.001V22C17.3209 21.7333 16.6476 21.5667 15.9809 21.5L8.00098 6.30216V21.5C7.33431 21.5667 6.66764 21.7333 6.00098 22V2H8.00098L15.9853 17.2079Z";
        }

        if (providerName.Contains("Apple", StringComparison.OrdinalIgnoreCase))
        {
            return "M15.778 8.20793C15.3053 8.1711 14.7974 8.28434 14.0197 8.58067C14.085 8.55577 13.2775 8.87173 13.0511 8.95077C12.5494 9.12593 12.1364 9.22198 11.6734 9.22198C11.2151 9.22198 10.7925 9.13042 10.3078 8.96683C10.1524 8.91441 9.99616 8.8564 9.80283 8.7809C9.71993 8.74852 9.41997 8.62947 9.3544 8.60379C8.70626 8.34996 8.34154 8.25434 8.03885 8.26181C6.88626 8.2765 5.79557 8.9421 5.16246 10.0442C3.87037 12.2875 4.58583 16.3428 6.47459 19.075C7.4802 20.5189 8.03062 21.035 8.25199 21.0279C8.4743 21.0183 8.63777 20.9713 9.03567 20.8026C9.11485 20.7689 9.11485 20.7689 9.202 20.7317C10.2077 20.3032 10.9118 20.114 11.9734 20.114C12.9944 20.114 13.6763 20.2997 14.6416 20.7159C14.7302 20.7542 14.7302 20.7542 14.8097 20.7884C15.2074 20.9588 15.3509 20.9962 15.6016 20.9902C15.9591 20.9846 16.4003 20.5726 17.3791 19.1362C17.6471 18.7447 17.884 18.3333 18.0895 17.9168C17.9573 17.8077 17.826 17.6917 17.6975 17.5693C16.4086 16.3408 15.6114 14.6845 15.5895 12.6391C15.5756 11.0186 16.1057 9.61487 16.999 8.45797C16.6293 8.3142 16.2216 8.23805 15.778 8.20793ZM15.9334 6.21398C16.6414 6.26198 18.6694 6.47798 19.9894 8.40998C19.8814 8.46998 17.5654 9.81397 17.5894 12.622C17.6254 15.982 20.5294 17.098 20.5654 17.11C20.5414 17.194 20.0974 18.706 19.0294 20.266C18.1054 21.622 17.1454 22.966 15.6334 22.99C14.1454 23.026 13.6654 22.114 11.9734 22.114C10.2694 22.114 9.74138 22.966 8.33738 23.026C6.87338 23.074 5.76938 21.562 4.83338 20.218C2.92538 17.458 1.47338 12.442 3.42938 9.04597C4.40138 7.35397 6.12938 6.28598 8.01338 6.26198C9.44138 6.22598 10.7974 7.22198 11.6734 7.22198C12.5374 7.22198 14.0854 6.06998 15.9334 6.21398ZM14.7934 4.38998C14.0134 5.32598 12.7414 6.05798 11.5054 5.96198C11.3374 4.68998 11.9614 3.35798 12.6814 2.52998C13.4854 1.59398 14.8294 0.897976 15.9454 0.849976C16.0894 2.14598 15.5734 3.45398 14.7934 4.38998Z";
        }

        if (providerName.Contains("Servarr", StringComparison.OrdinalIgnoreCase))
        {
            return "M4.50772 2.87597C4.57028 2.37554 4.99568 2 5.5 2H18.5C19.0043 2 19.4297 2.37554 19.4923 2.87597L20.9923 14.876C20.9974 14.9171 21 14.9585 21 15V21C21 21.5523 20.5523 22 20 22H4C3.44772 22 3 21.5523 3 21V15C3 14.9585 3.00258 14.9171 3.00772 14.876L4.50772 2.87597ZM6.38278 4L5.13278 14H18.8672L17.6172 4H6.38278ZM19 16H5V20H19V16ZM15 17H17V19H15V17ZM13 17H11V19H13V17Z";
        }

        return "M2 3.9934C2 3.44476 2.45531 3 2.9918 3H21.0082C21.556 3 22 3.44495 22 3.9934V20.0066C22 20.5552 21.5447 21 21.0082 21H2.9918C2.44405 21 2 20.5551 2 20.0066V3.9934ZM4 5V19H20V5H4ZM10.6219 8.41459L15.5008 11.6672C15.6846 11.7897 15.7343 12.0381 15.6117 12.2219C15.5824 12.2658 15.5447 12.3035 15.5008 12.3328L10.6219 15.5854C10.4381 15.708 10.1897 15.6583 10.0672 15.4745C10.0234 15.4088 10 15.3316 10 15.2526V8.74741C10 8.52649 10.1791 8.34741 10.4 8.34741C10.479 8.34741 10.5562 8.37078 10.6219 8.41459Z";
    }
}
